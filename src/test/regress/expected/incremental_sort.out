-- When we have to sort the entire table, incremental sort will
-- be slower than plain sort, so it should not be used.
explain (costs off)
select * from (select * from tenk1 order by four) t order by four, ten;
            QUERY PLAN             
-----------------------------------
 Sort
   Sort Key: tenk1.four, tenk1.ten
   ->  Sort
         Sort Key: tenk1.four
         ->  Seq Scan on tenk1
(5 rows)

-- When there is a LIMIT clause, incremental sort is beneficial because
-- it only has to sort some of the groups, and not the entire table.
explain (costs off)
select * from (select * from tenk1 order by four) t order by four, ten
limit 1;
               QUERY PLAN                
-----------------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: tenk1.four, tenk1.ten
         Presorted Key: tenk1.four
         ->  Sort
               Sort Key: tenk1.four
               ->  Seq Scan on tenk1
(7 rows)

-- When work_mem is not enough to sort the entire table, incremental sort
-- may be faster if individual groups still fit into work_mem.
set work_mem to '2MB';
explain (costs off)
select * from (select * from tenk1 order by four) t order by four, ten;
            QUERY PLAN             
-----------------------------------
 Incremental Sort
   Sort Key: tenk1.four, tenk1.ten
   Presorted Key: tenk1.four
   ->  Sort
         Sort Key: tenk1.four
         ->  Seq Scan on tenk1
(6 rows)

reset work_mem;
-- TODO if an analyze happens here the plans might change; should we
-- solve by inserting extra rows or by adding a GUC that would somehow
-- forcing the time of plan we expect.
create table t(a integer, b integer);
-- A single large group tested around each mode transition point.
insert into t(a, b) select 1, i from generate_series(1, 100) n(i);
explain (costs off) select * from (select * from t order by a) s order by a, b limit 31;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 31;
 a | b  
---+----
 1 |  1
 1 |  2
 1 |  3
 1 |  4
 1 |  5
 1 |  6
 1 |  7
 1 |  8
 1 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 1 | 20
 1 | 21
 1 | 22
 1 | 23
 1 | 24
 1 | 25
 1 | 26
 1 | 27
 1 | 28
 1 | 29
 1 | 30
 1 | 31
(31 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 32;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 32;
 a | b  
---+----
 1 |  1
 1 |  2
 1 |  3
 1 |  4
 1 |  5
 1 |  6
 1 |  7
 1 |  8
 1 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 1 | 20
 1 | 21
 1 | 22
 1 | 23
 1 | 24
 1 | 25
 1 | 26
 1 | 27
 1 | 28
 1 | 29
 1 | 30
 1 | 31
 1 | 32
(32 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 33;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 33;
 a | b  
---+----
 1 |  1
 1 |  2
 1 |  3
 1 |  4
 1 |  5
 1 |  6
 1 |  7
 1 |  8
 1 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 1 | 20
 1 | 21
 1 | 22
 1 | 23
 1 | 24
 1 | 25
 1 | 26
 1 | 27
 1 | 28
 1 | 29
 1 | 30
 1 | 31
 1 | 32
 1 | 33
(33 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 65;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 65;
 a | b  
---+----
 1 |  1
 1 |  2
 1 |  3
 1 |  4
 1 |  5
 1 |  6
 1 |  7
 1 |  8
 1 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 1 | 20
 1 | 21
 1 | 22
 1 | 23
 1 | 24
 1 | 25
 1 | 26
 1 | 27
 1 | 28
 1 | 29
 1 | 30
 1 | 31
 1 | 32
 1 | 33
 1 | 34
 1 | 35
 1 | 36
 1 | 37
 1 | 38
 1 | 39
 1 | 40
 1 | 41
 1 | 42
 1 | 43
 1 | 44
 1 | 45
 1 | 46
 1 | 47
 1 | 48
 1 | 49
 1 | 50
 1 | 51
 1 | 52
 1 | 53
 1 | 54
 1 | 55
 1 | 56
 1 | 57
 1 | 58
 1 | 59
 1 | 60
 1 | 61
 1 | 62
 1 | 63
 1 | 64
 1 | 65
(65 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 66;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 66;
 a | b  
---+----
 1 |  1
 1 |  2
 1 |  3
 1 |  4
 1 |  5
 1 |  6
 1 |  7
 1 |  8
 1 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 1 | 20
 1 | 21
 1 | 22
 1 | 23
 1 | 24
 1 | 25
 1 | 26
 1 | 27
 1 | 28
 1 | 29
 1 | 30
 1 | 31
 1 | 32
 1 | 33
 1 | 34
 1 | 35
 1 | 36
 1 | 37
 1 | 38
 1 | 39
 1 | 40
 1 | 41
 1 | 42
 1 | 43
 1 | 44
 1 | 45
 1 | 46
 1 | 47
 1 | 48
 1 | 49
 1 | 50
 1 | 51
 1 | 52
 1 | 53
 1 | 54
 1 | 55
 1 | 56
 1 | 57
 1 | 58
 1 | 59
 1 | 60
 1 | 61
 1 | 62
 1 | 63
 1 | 64
 1 | 65
 1 | 66
(66 rows)

delete from t;
-- An initial large group followed by a small group.
insert into t(a, b) select (case when i < 50 then 1 else 2 end), i from generate_series(1, 100) n(i);
explain (costs off) select * from (select * from t order by a) s order by a, b limit 55;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 55;
 a | b  
---+----
 1 |  1
 1 |  2
 1 |  3
 1 |  4
 1 |  5
 1 |  6
 1 |  7
 1 |  8
 1 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 1 | 20
 1 | 21
 1 | 22
 1 | 23
 1 | 24
 1 | 25
 1 | 26
 1 | 27
 1 | 28
 1 | 29
 1 | 30
 1 | 31
 1 | 32
 1 | 33
 1 | 34
 1 | 35
 1 | 36
 1 | 37
 1 | 38
 1 | 39
 1 | 40
 1 | 41
 1 | 42
 1 | 43
 1 | 44
 1 | 45
 1 | 46
 1 | 47
 1 | 48
 1 | 49
 2 | 50
 2 | 51
 2 | 52
 2 | 53
 2 | 54
 2 | 55
(55 rows)

delete from t;
-- An initial small group followed by a large group.
insert into t(a, b) select (case when i < 5 then i else 9 end), i from generate_series(1, 100) n(i);
explain (costs off) select * from (select * from t order by a) s order by a, b limit 70;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 70;
 a | b  
---+----
 1 |  1
 2 |  2
 3 |  3
 4 |  4
 9 |  5
 9 |  6
 9 |  7
 9 |  8
 9 |  9
 9 | 10
 9 | 11
 9 | 12
 9 | 13
 9 | 14
 9 | 15
 9 | 16
 9 | 17
 9 | 18
 9 | 19
 9 | 20
 9 | 21
 9 | 22
 9 | 23
 9 | 24
 9 | 25
 9 | 26
 9 | 27
 9 | 28
 9 | 29
 9 | 30
 9 | 31
 9 | 32
 9 | 33
 9 | 34
 9 | 35
 9 | 36
 9 | 37
 9 | 38
 9 | 39
 9 | 40
 9 | 41
 9 | 42
 9 | 43
 9 | 44
 9 | 45
 9 | 46
 9 | 47
 9 | 48
 9 | 49
 9 | 50
 9 | 51
 9 | 52
 9 | 53
 9 | 54
 9 | 55
 9 | 56
 9 | 57
 9 | 58
 9 | 59
 9 | 60
 9 | 61
 9 | 62
 9 | 63
 9 | 64
 9 | 65
 9 | 66
 9 | 67
 9 | 68
 9 | 69
 9 | 70
(70 rows)

delete from t;
-- Small groups of 10 tuples each tested around each mode transition point.
insert into t(a, b) select i / 10, i from generate_series(1, 70) n(i);
explain (costs off) select * from (select * from t order by a) s order by a, b limit 31;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 31;
 a | b  
---+----
 0 |  1
 0 |  2
 0 |  3
 0 |  4
 0 |  5
 0 |  6
 0 |  7
 0 |  8
 0 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 2 | 20
 2 | 21
 2 | 22
 2 | 23
 2 | 24
 2 | 25
 2 | 26
 2 | 27
 2 | 28
 2 | 29
 3 | 30
 3 | 31
(31 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 32;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 32;
 a | b  
---+----
 0 |  1
 0 |  2
 0 |  3
 0 |  4
 0 |  5
 0 |  6
 0 |  7
 0 |  8
 0 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 2 | 20
 2 | 21
 2 | 22
 2 | 23
 2 | 24
 2 | 25
 2 | 26
 2 | 27
 2 | 28
 2 | 29
 3 | 30
 3 | 31
 3 | 32
(32 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 33;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 33;
 a | b  
---+----
 0 |  1
 0 |  2
 0 |  3
 0 |  4
 0 |  5
 0 |  6
 0 |  7
 0 |  8
 0 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 2 | 20
 2 | 21
 2 | 22
 2 | 23
 2 | 24
 2 | 25
 2 | 26
 2 | 27
 2 | 28
 2 | 29
 3 | 30
 3 | 31
 3 | 32
 3 | 33
(33 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 65;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 65;
 a | b  
---+----
 0 |  1
 0 |  2
 0 |  3
 0 |  4
 0 |  5
 0 |  6
 0 |  7
 0 |  8
 0 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 2 | 20
 2 | 21
 2 | 22
 2 | 23
 2 | 24
 2 | 25
 2 | 26
 2 | 27
 2 | 28
 2 | 29
 3 | 30
 3 | 31
 3 | 32
 3 | 33
 3 | 34
 3 | 35
 3 | 36
 3 | 37
 3 | 38
 3 | 39
 4 | 40
 4 | 41
 4 | 42
 4 | 43
 4 | 44
 4 | 45
 4 | 46
 4 | 47
 4 | 48
 4 | 49
 5 | 50
 5 | 51
 5 | 52
 5 | 53
 5 | 54
 5 | 55
 5 | 56
 5 | 57
 5 | 58
 5 | 59
 6 | 60
 6 | 61
 6 | 62
 6 | 63
 6 | 64
 6 | 65
(65 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 66;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 66;
 a | b  
---+----
 0 |  1
 0 |  2
 0 |  3
 0 |  4
 0 |  5
 0 |  6
 0 |  7
 0 |  8
 0 |  9
 1 | 10
 1 | 11
 1 | 12
 1 | 13
 1 | 14
 1 | 15
 1 | 16
 1 | 17
 1 | 18
 1 | 19
 2 | 20
 2 | 21
 2 | 22
 2 | 23
 2 | 24
 2 | 25
 2 | 26
 2 | 27
 2 | 28
 2 | 29
 3 | 30
 3 | 31
 3 | 32
 3 | 33
 3 | 34
 3 | 35
 3 | 36
 3 | 37
 3 | 38
 3 | 39
 4 | 40
 4 | 41
 4 | 42
 4 | 43
 4 | 44
 4 | 45
 4 | 46
 4 | 47
 4 | 48
 4 | 49
 5 | 50
 5 | 51
 5 | 52
 5 | 53
 5 | 54
 5 | 55
 5 | 56
 5 | 57
 5 | 58
 5 | 59
 6 | 60
 6 | 61
 6 | 62
 6 | 63
 6 | 64
 6 | 65
 6 | 66
(66 rows)

delete from t;
-- Small groups of only 1 tuple each tested around each mode transition point.
insert into t(a, b) select i, i from generate_series(1, 70) n(i);
explain (costs off) select * from (select * from t order by a) s order by a, b limit 31;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 31;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
(31 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 32;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 32;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
(32 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 33;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 33;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
(33 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 65;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 65;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
 34 | 34
 35 | 35
 36 | 36
 37 | 37
 38 | 38
 39 | 39
 40 | 40
 41 | 41
 42 | 42
 43 | 43
 44 | 44
 45 | 45
 46 | 46
 47 | 47
 48 | 48
 49 | 49
 50 | 50
 51 | 51
 52 | 52
 53 | 53
 54 | 54
 55 | 55
 56 | 56
 57 | 57
 58 | 58
 59 | 59
 60 | 60
 61 | 61
 62 | 62
 63 | 63
 64 | 64
 65 | 65
(65 rows)

explain (costs off) select * from (select * from t order by a) s order by a, b limit 66;
           QUERY PLAN            
---------------------------------
 Limit
   ->  Incremental Sort
         Sort Key: t.a, t.b
         Presorted Key: t.a
         ->  Sort
               Sort Key: t.a
               ->  Seq Scan on t
(7 rows)

select * from (select * from t order by a) s order by a, b limit 66;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
 34 | 34
 35 | 35
 36 | 36
 37 | 37
 38 | 38
 39 | 39
 40 | 40
 41 | 41
 42 | 42
 43 | 43
 44 | 44
 45 | 45
 46 | 46
 47 | 47
 48 | 48
 49 | 49
 50 | 50
 51 | 51
 52 | 52
 53 | 53
 54 | 54
 55 | 55
 56 | 56
 57 | 57
 58 | 58
 59 | 59
 60 | 60
 61 | 61
 62 | 62
 63 | 63
 64 | 64
 65 | 65
 66 | 66
(66 rows)

delete from t;
drop table t;
